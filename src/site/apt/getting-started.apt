Getting started with <<Any23>>

    <<Any23>> can be used:

      * via CLI (command line interface) from your preferred shell environment;
      * as a RESTful Webservice;
      * as a library.

* <<Any23>> Modules

    <<Any23>> is composed of the following modules:

      * <<<any23-core/>>>      The core library.

      * <<<any23-service/>>>   The REST service.

      * <<<any23-plugins/>>>   The core additional plugins.

* Use the <<Any23>> CLI

   The command-line tools support is provided by the <<any23-core>> module.

   Once <<Any23>> has been correctly {{{./install.html}installed}}, if you want to use it as a commandline tool,
   use the shell scripts within the <<"any23-core/bin">> directory.
   These are provided both for Unix (Linux/OSX).

   The main script is <<"any23tools">> which provides analysis, documentation, testing and debugging utilities.

   Simply running <./any23tools> without options will show the <default configuration properties>
   and the <usage> options. The resource (URL or local file) is the only mandatory argument.
   It is possible also to specify input format, output format and other advanced options.

+-------------------------------------------
any23-core/bin$ ./any23tools
Usage: ToolRunner <utility> [options...]
 where <utility> is one of:
	ExtractorDocumentation                Utility for obtaining documentation about metadata extractors.
	MicrodataParser                     Commandline Tool for extracting Microdata from file/HTTP source.
	MimeDetector                                                                MIME Type Detector Tool.
	PluginVerifier                                           Utility for plugin management verification.
	Rover                                                                       Any23 Command Line Tool.
	Version                        Prints out the current library version and configuration information.
	VocabPrinter                            Prints out the RDF Schema of the vocabularies used by Any23.
+-------------------------------------------

   The <any23tools> script detects a list of available utilities within the <<any23-core>> and <<plugins>>
   classpath and allows to activate them.

   The <any23-core> CLI tools are:

       * <<<ExtractorDocumentation>>>: a utility for obtaining useful information about extractors.

       * <<<MicrodataParser>>>:  commandline parser to extract specific Microdata content from a web page
         (local or remote) and produce a JSON output compliant with the Microdata
         specification ({{{http://www.w3.org/TR/microdata/}http://www.w3.org/TR/microdata/}}).

       * <<<MimeDetector>>>: detects the MIME Type for any HTTP / file / direct input resource.

       * <<<PluginVerifier>>>: a utility for verifying <Any23> plugins.

       * <<<Rover>>>: the RDF extraction tool.

       * <<<Version>>>: prints out useful information about the library version and configuration.

       * <<<VocabPrinter>>>: allows to dump all the <<RDFSchema>> vocabularies declared within Any23.

** Rover
   
   Rover is the main extraction tool. It allows to extract metadata from local and remote (HTTP)
   resources, specify a custom list of extractors, specify the desired output format and other flags
   to suppress noise and generate advanced reports.
  
+-------------------------------------------
any23-core/bin$ any23tools Rover
usage: [{<url>|<file>}]+ [-d <arg>] [-e <arg>] [-f <arg>] [-h] [-l <arg>]
       [-n] [-o <arg>] [-p] [-s] [-t] [-v]
 -d,--defaultns <arg>       Override the default namespace used to produce
                            statements.
 -e <arg>                   Specify a comma-separated list of extractors,
                            e.g. rdf-xml,rdf-turtle.
 -f,--Output format <arg>   [turtle (default), rdfxml, ntriples, nquads,
                            trix, json, uri]
 -h,--help                  Print this help.
 -l,--log <arg>             Produce log within a file.
 -n,--nesting               Disable production of nesting triples.
 -o,--output <arg>          Specify Output file (defaults to standard
                            output).
 -p,--pedantic              Validate and fixes HTML content detecting
                            commons issues.
 -s,--stats                 Print out extraction statistics.
 -t,--notrivial             Filter trivial statements (e.g. CSS related
                            ones).
 -v,--verbose               Show debug and progress information.
Expected at least 1 argument.
+-------------------------------------------

  Extract metadata from an <<HTML>> page:

+-----------------------------------------
any23-core/bin$ ./any23tools Rover http://yourdomain/yourfile
+-----------------------------------------

  Extract metadata from a <<local>> resource:

+--------------------------------------
any23-core/bin$ ./any23tools Rover myfoaf.rdf
+--------------------------------------

  Specify the output format, use the option <<"-f">> or <<"--format">>:
  (Default output format is <<TURTLE>>).

+--------------------------------------
any23-core/bin$ ./any23tools Rover -f quad myfoaf.rdf
+--------------------------------------

  Filtering trivial statements

    By default, <<Any23>> will extract <HTML/head> meta information, such as links to <CSS stylesheets> or meta
    information like the author or the software used to create the <html>. Hence, if the user is only interested
    in the structured content from the <HTML/body> tag we offer a filter functionality, activated by the <<"-t">>
    command line argument.

+-------------------------
any23-core/bin$ ./any23tools Rover -t -f quad myfoaf.rdf
+-------------------------

** ExtractorDocumentation

   The ExtractorDocumentation returns human readable information
   about the registered extractors.

+-------------------------------------------
any23-core/bin$ ./any23tools ExtractorDocumentation
Usage:
  ExtractorDocumentation -list
      shows the names of all available extractors

  ExtractorDocumentation -i extractor-name
      shows example input for the given extractor

  ExtractorDocumentation -o extractor-name
      shows example output for the given extractor

  ExtractorDocumentation -all
      shows a report about all available extractors
+-------------------------------------------

   List all the available extractors:

+--------------------------------------
any23-core/bin$ ./any23tools ExtractorDocumentation -list
                      csv [class org.deri.any23.extractor.csv.CSVExtractor]
           html-head-icbm [class org.deri.any23.extractor.html.ICBMExtractor]
          html-head-links [class org.deri.any23.extractor.html.HeadLinkExtractor]
          html-head-title [class org.deri.any23.extractor.html.TitleExtractor]
              html-mf-adr [class org.deri.any23.extractor.html.AdrExtractor]
              html-mf-geo [class org.deri.any23.extractor.html.GeoExtractor]
        html-mf-hcalendar [class org.deri.any23.extractor.html.HCalendarExtractor]
            html-mf-hcard [class org.deri.any23.extractor.html.HCardExtractor]
         html-mf-hlisting [class org.deri.any23.extractor.html.HListingExtractor]
          html-mf-hrecipe [class org.deri.any23.extractor.html.HRecipeExtractor]
          html-mf-hresume [class org.deri.any23.extractor.html.HResumeExtractor]
          html-mf-hreview [class org.deri.any23.extractor.html.HReviewExtractor]
          html-mf-license [class org.deri.any23.extractor.html.LicenseExtractor]
          html-mf-species [class org.deri.any23.extractor.html.SpeciesExtractor]
              html-mf-xfn [class org.deri.any23.extractor.html.XFNExtractor]
           html-microdata [class org.deri.any23.extractor.microdata.MicrodataExtractor]
              html-rdfa11 [class org.deri.any23.extractor.rdfa.RDFa11Extractor]
       html-script-turtle [class org.deri.any23.extractor.html.TurtleHTMLExtractor]
                   rdf-nq [class org.deri.any23.extractor.rdf.NQuadsExtractor]
                   rdf-nt [class org.deri.any23.extractor.rdf.NTriplesExtractor]
                 rdf-trix [class org.deri.any23.extractor.rdf.TriXExtractor]
               rdf-turtle [class org.deri.any23.extractor.rdf.TurtleExtractor]
                  rdf-xml [class org.deri.any23.extractor.rdf.RDFXMLExtractor]
+--------------------------------------

** MicrodataParser

   The <MicrodataParser> tool allows to apply the only MicrodataExtractor 
   on a specific input source and returns the extracted data in the JSON format
   declared in the Microdata specification section {{{http://www.w3.org/TR/microdata/#json}JSON}}.

+--------------------------------------
any23-core/bin$ ./any23tools MicrodataParser
Usage: {http://path/to/resource.html|file:/path/to/local.file}
+--------------------------------------


** VocabPrinter

   The VocabPrinter Tool prints out the RDFSchema declared by all the <<Any23>>
   declared vocabularies.

   <<This tool is still in beta version.>>

** MimeDetector

   The MimeDetector Tool extracts the <<MIME Type>> for a given source (http:// file:// inline://).

   Examples:

+--------------------------------------
any23-core/bin$ ./any23tools MimeDetector http://www.michelemostarda.com/foaf.rdf
application/rdf+xml

any23-core/bin$ ./any23tools MimeDetector file://../src/test/resources/application/trix/test1.trx
application/trix

any23-core/bin$ ./any23tools MimeDetector 'inline://<http://s> <http://p> <http://o> .'
text/n3
+--------------------------------------

** PluginVerifier

   TODO: missing.

* <<Any23>> CLI <Plugins>

   The <<Any23>> ToolRunner CLI (<bin/any23tools>) supports the auto detection of Tool plugins within the classpath.
   For further details see {{{./any23-plugins.html}Plugins}} section.

   The default <<any23>> CLI plugins are enlisted below.

** Crawler Plugin

   {crawler-tool}
   The <Crawler Plugin> provides basic site crawling and metadata extraction capabilities.

+----------------------------------------------------------------------------
any23-core/bin$ ./any23tools Crawler
usage: [{<url>|<file>}]+ [-d <arg>] [-e <arg>] [-f <arg>] [-h] [-l <arg>]
       [-maxdepth <arg>] [-maxpages <arg>] [-n] [-numcrawlers <arg>] [-o
       <arg>] [-p] [-pagefilter <arg>] [-politenessdelay <arg>] [-s]
       [-storagefolder <arg>] [-t] [-v]
 -d,--defaultns <arg>       Override the default namespace used to produce
                            statements.
 -e <arg>                   Specify a comma-separated list of extractors,
                            e.g. rdf-xml,rdf-turtle.
 -f,--Output format <arg>   [turtle (default), rdfxml, ntriples, nquads,
                            trix, json, uri]
 -h,--help                  Print this help.
 -l,--log <arg>             Produce log within a file.
 -maxdepth <arg>            Max allowed crawler depth. Default: no limit.
 -maxpages <arg>            Max number of pages before interrupting crawl.
                            Default: no limit.
 -n,--nesting               Disable production of nesting triples.
 -numcrawlers <arg>         Sets the number of crawlers. Default: 10
 -o,--output <arg>          Specify Output file (defaults to standard
                            output).
 -p,--pedantic              Validate and fixes HTML content detecting
                            commons issues.
 -pagefilter <arg>          Regex used to filter out page URLs during
                            crawling. Default:
                            '.*(\.(css|js|bmp|gif|jpe?g|png|tiff?|mid|mp2|
                            mp3|mp4|wav|wma|avi|mov|mpeg|ram|m4v|wmv|rm|sm
                            il|pdf|swf|zip|rar|gz|xml|txt))$'
 -politenessdelay <arg>     Politeness delay in milliseconds. Default: no
                            limit.
 -s,--stats                 Print out extraction statistics.
 -storagefolder <arg>       Folder used to store crawler temporary data.
                            Default:
                            [/var/folders/d5/c_0b4h1d7t1gx6tzz_dn5cj40000g
                            q/T/]
 -t,--notrivial             Filter trivial statements (e.g. CSS related
                            ones).
 -v,--verbose               Show debug and progress information.
+----------------------------------------------------------------------------

    A usage example:

+----------------------------------------------------------------------------
any23-core/bin$ ./any23tools Crawler -s -f ntriples http://www.repubblica.it 1> out.nt 2> repubblica.log
+----------------------------------------------------------------------------

* Use <<Any23>> as a RESTful Web Service

   <<Any23>> provides a Web Service that can be used to extract <RDF> from Web documents.
   <<Any23>> services can be accessed through a {{{./service.html}RESTful API}}.

   Running the server

    The server command line tool is defined within the <<any23-service>> module.
    Run the <"any23server"> script

+--------------------------
any23-service/bin$ ./any23server
+--------------------------

    from the command line in order to start up the server, then go to {{{http://localhost:8080/}}}
    to access the web interface. A live demo version of such service is running at {{{http://any23.org/}}}.
    You can also start the server from Java by running the
    {{{./xref/org/deri/any23/servlet/Servlet.html}Any23 Servlet}} class. Maven can be used to create a WAR
    file for deployment into an existing servlet container such as {{{http://tomcat.apache.org/}Apache Tomcat}}.

* Use <<Any23>> as a Library

   See our {{{./developers.html}Developers guide}} for more details.
