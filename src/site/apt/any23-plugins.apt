Any23 Plugins

* Introduction

    This section describes the <Any23> plugins support.

    <Any23> comes with a set of predefined plugins.
    Such plugins are located under the <any23-root>/<<plugins>> dir.

    A plugin is a standard <Maven3> module containing any implementation of

    * {{{./xref/org/deri/any23/plugin/ExtractorPlugin.html}ExtractorPlugin}}

    * {{{./xref/org/deri/any23/cli/Tool.html}Tool}}

* How to Register a Plugin

   A plugin can be added to <Any23> by:

   * adding its <JAR> to the <Any23> <JVM classpath>;

   * adding its <JAR> to the <$HOME/.any23/plugins> directory.

   TODO: plugin support in CLI

   TODO: plugin support in library

   TODO: plugin support in Any23 Service

    Any implementation of <ExtractorPlugin> will automatically registered to the
    {{{./xref/org/deri/any23/extractor/ExtractorRegistry.html}ExtractorRegistry}}.

    Any detected implementation of <Tool> will be listed by the <ToolRunner>
    command-line tool in <any23-root/><<bin/any23tools>> .

* How to Build a Plugin

   <Any23> takes care to <test> and <package> plugins when distributed from its reactor <POM>.
   It is aways possible to rebuild a plugin using the command:

+------------------------------------------
  <plugin-dir>$ mvn clean assembly:assembly
+------------------------------------------

* How to Write an Extractor Plugin

   An <Extractor Plugin> is a class:

   * implementing the {{{./xref/org/deri/any23/plugin/ExtractorPlugin.html}ExtractorPlugin}} interface;

   * packaged under <<org.deri.any23.plugin>> .

   An example of plugin is defined below.

+--------------------------------------
  @Author(name="Michele Mostarda (mostarda@fbk.eu)")
  public class HTMLScraperPlugin implements ExtractorPlugin {

    private static final Logger logger = LoggerFactory.getLogger(HTMLScraperPlugin.class);

    @Init
    public void init() {
        logger.info("Plugin initialization.");
    }

    @Shutdown
    public void shutdown() {
        logger.info("Plugin shutdown.");
    }

    public ExtractorFactory getExtractorFactory() {
        return HTMLScraperExtractor.factory;
    }

  }
+--------------------------------------

* How to Write a Tool Plugin

   An <Tool Plugin> is a class:

   * implementing the {{{./xref/org/deri/any23/cli/Tool.html}Tool}} interface;

   * packaged under <<org.deri.any23.cli>> .

   An example of plugin is defined below.

+--------------------------------------
@ToolRunner.Description("Prints out the current library version and configuration information.")
public class Version implements Tool {

    public static void main(String[] args) {
        System.exit( new Version().run(args) );
    }

    public int run(String[] args) {
        final String version = Any23.VERSION;
        if(version == null) {
            System.err.println("Error while retrieving configuration info.");
            return 1;
        }
        System.out.println(String.format("Any23 Core v. %s", version));
        System.out.println();
        return 0;
    }

}
+--------------------------------------

* Available Extractor Plugins

  * HTML Scraper Plugin

    The <HTMLScraperPlugin> is able to scrape plain text content from any HTML page
    and transform it into statement literals.

    This plugin is documented {{{./plugin-html-scraper.html}here}}.

  * Office Scraper Plugins

    The <Office Scraper Plugins> allow to extract semantic content from several
    <Microsoft Office> document formats.

    These plugins are documented {{{./plugin-office-scraper.html}here}}.

* Available CLI Tool Plugins

  * Crawler CLI Tool

    The {{{./xref/org/deri/any23/cli/Crawler.html}Crawler CLI Tool}} is an extension of the
    {{{./xref/org/deri/any23/cli/Rover.html}Rover CLI Tool}} to add site crawling basic
    capabilities. More information about the <CLI> can be found at
    {{{./getting-started.html#crawler-tool}Getting Started - Crawler Tool}} section.
