Getting started with <<Any23>>

 <<Any23>> could be used as 

  * a command line tool from your preferred shell environment,

  * as a RESTful Webservice,

  * as a library.

 This section shows how to deal with them.

Using Any23 as a command line tool

 The command line tool is defined within the <<any23-core>> module.

 Once <<Any23>> has been correctly {{{install.html}installed}}, if you want to use it as a command line tool, please use the shell scripts provided in the <<"/bin">> directory of the download. These are provided both as Windows and Unix (Linux/OS X) versions. Note, you may want to add the /bin directory to your system path.

 The main script is <<"any23">>. The <<"any23tools">> command also provides access to some testing, debugging and analyzing utilities (sorry, we do not provide a documentation for this at the moment).

* Examples

 We believe that any23 provides you and easy to use command line interface with self explaining optional parameters. Different usages are now described:

** Overview:

+-------------------------------------------
any23-core/bin$ ./any23
usage: any23 [file|url] [-e <arg>] [-f <arg>] [-l <arg>] [-n] [-o <arg>]
       [-p] [-s] [-t] [-v]
 -e <arg>            comma-separated list of extractors, e.g.
                     rdf-xml,rdf-turtle
 -f,--format <arg>   [turtle (default), ntriples, rdfxml,quad]
 -l,--log <arg>      logging, please specify a file
 -n,--nesting        disable production of nesting triples
 -o,--output <arg>   ouput file (defaults to stdout)
 -p,--pedantic       validates and fixes HTML content detecting commons
                     issues
 -s,--stats          print out statistics of Any23
 -t,--notrivial      filter trivial statements
 -v,--verbose        show progress and debug information
+-------------------------------------------

** Extract meta information from Web documents:

+-----------------------------------------
any23-core/bin$ ./any23 http://yourdomain/yourfile
+-----------------------------------------

** Extract meta information from local files:

+--------------------------------------
any23-core/bin$ ./any23 /home/user/myFoaf.rdf
+--------------------------------------

** Specify the output format, use option <<"-f">> or <<"--format">>:

 TURTLE - default configuration, no need for specific flag

+--------------------------------------
any23-core/bin$ ./any23 foaf.rdf
+--------------------------------------

 N3 - <<-f ntriples>>

+--------------------------------------
any23-core/bin$ ./any23 -f ntriples foaf.rdf
+--------------------------------------

 Quad - <<-f quad>> (please see further information about the {{{http://sw.deri.org/2008/07/n-quads/}"quad"}} format)

+--------------------------------------
any23-core/bin$ ./any23 -f quad foaf.rdf
+--------------------------------------

** Filtering trivial statements

 By default, <<Any23>> will extract <HTML/head> meta information, such as links to <CSS stylesheets> or meta information like the author or the software used to create the <html>. Hence, if the user is only interested in the structured content from the <HTML/body> tag we offer a filter functionality, activated by the <<"-t">> command line argument.

+-------------------------
any23-core/bin$ ./any23 -t foaf.rdf
+-------------------------

Using <<Any23>> as a Web service

 <<Any23>> provides a web interface that you can use to extract <RDF> from Web documents. <<Any23>> services can be invoked through a RESTful AP described below.

* Running the server

 The server command line tool is defined within the <<any23-service>> module.

 Run the <"any23server"> script from the command line in order to start up the server, then go to {{{http://localhost:8080/}}} to access the web interface. The web interface also provides a REST API for converting between formats. Documentation for the API is served up by the servlet itself at {{{http://localhost:8080/}}}. We have a demo version of the servlet running at {{{http://any23.org/}}}.

+--------------------------
any23-service/bin$ ./any23server
+--------------------------

 You can also start the server from Java by running the {{{http://developers.any23.org/apidocs/org/deri/any23/servlet/Any23Server.html}Any23Server}} class. The Ant build can be used to create a WAR file for deployment into an existing servlet container such as {{{http://tomcat.apache.org/}Apache Tomcat}}; type <ant war> to generate the <any23.war> file.

Integrating Any23 in your Java programs

 See our {{{developers.html}Developers guide}} for more details.
