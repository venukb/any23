/* CVS $Id: $ */
package org.deri.any23.vocab; 
import java.util.HashMap;
import java.util.Map;

import org.openrdf.model.URI;
import org.openrdf.model.ValueFactory;
import org.openrdf.model.impl.ValueFactoryImpl;
 
/**
 * Vocabulary definitions from vcard.owl 
 * @author Auto-generated by schemagen on 28 apr 2008 14:01 
 */
public class VCARD {
	private static final Map<String, URI> propertyMap = new HashMap<String, URI>();

    /** <p>The RDF model that holds the vocabulary terms</p> */
    private static ValueFactory factory = ValueFactoryImpl.getInstance();
    
    /** <p>The namespace of the vocabulary as a string</p> */
    public static final String NS = "http://www.w3.org/2006/vcard/ns#";
    
    /** <p>The namespace of the vocabulary as a string</p>
     *  @see #NS */
    public static String getURI() {return NS;}
    
    /** <p>The namespace of the vocabulary as a URI</p> */
    public static final URI NAMESPACE = factory.createURI( NS );
    
    /** <p>An additional part of a person's name</p> */
    public static final URI additional_name = createProperty("additional-name" );
    
    /** <p>A postal or street address of a person</p> */
    public static final URI adr = createProperty("adr" );
    
    /** <p>A person that acts as one's agent</p> */
    public static final URI agent = createProperty("agent" );
    
    /** <p>The birthday of a person</p> */
    public static final URI bday = createProperty("bday" );
    
    /** <p>A category of a vCard</p> */
    public static final URI category = createProperty("category" );
    
    /** <p>A class (e.g., public, private, etc.) of a vCard</p> */
    public static final URI class_ = createProperty("class" );
    
    /** <p>The country of a postal address</p> */
    public static final URI country_name = createProperty("country-name" );
    
    /** <p>An email address</p> */
    public static final URI email = createProperty("email" );
    
    /** <p>The extended address of a postal address</p> */
    public static final URI extended_address = createProperty("extended-address" );
    
    /** <p>A family name part of a person's name</p> */
    public static final URI family_name = createProperty("family-name" );
    
    /** <p>A fax number of a person</p> */
    public static final URI fax = createProperty("fax" );
    
    /** <p>A formatted name of a person</p> */
    public static final URI fn = createProperty("fn" );
    
    /** <p>A geographic location associated with a person</p> */
    public static final URI geo = createProperty("geo" );
    
    /** <p>A given name part of a person's name</p> */
    public static final URI given_name = createProperty("given-name" );
    
    /** <p>A home address of a person</p> */
    public static final URI homeAdr = createProperty("homeAdr" );
    
    /** <p>A home phone number of a person</p> */
    public static final URI homeTel = createProperty("homeTel" );
    
    /** <p>An honorific prefix part of a person's name</p> */
    public static final URI honorific_prefix = createProperty("honorific-prefix" );
    
    /** <p>An honorific suffix part of a person's name</p> */
    public static final URI honorific_suffix = createProperty("honorific-suffix" );
    
    /** <p>A key (e.g, PKI key) of a person</p> */
    public static final URI key = createProperty("key" );
    
    /** <p>The formatted version of a postal address (a string with embedded line breaks, 
     *  punctuation, etc.)</p>
     */
    public static final URI label = createProperty("label" );
    
    /** <p>The latitude of a geographic location</p> */
    public static final URI latitude = createProperty("latitude" );
    
    /** <p>The locality (e.g., city) of a postal address</p> */
    public static final URI locality = createProperty("locality" );
    
    /** <p>A logo associated with a person or their organization</p> */
    public static final URI logo = createProperty("logo" );
    
    /** <p>The longitude of a geographic location</p> */
    public static final URI longitude = createProperty("longitude" );
    
    /** <p>A mailer associated with a vCard</p> */
    public static final URI mailer = createProperty("mailer" );
    
    /** <p>A mobile email address of a person</p> */
    public static final URI mobileEmail = createProperty("mobileEmail" );
    
    /** <p>A mobile phone number of a person</p> */
    public static final URI mobileTel = createProperty("mobileTel" );
    
    /** <p>The components of the name of a person</p> */
    public static final URI n = createProperty("n" );
    
    /** <p>The nickname of a person</p> */
    public static final URI nickname = createProperty("nickname" );
    
    /** <p>Notes about a person on a vCard</p> */
    public static final URI note = createProperty("note" );
    
    /** <p>An organization associated with a person</p> */
    public static final URI org = createProperty("org" );
    
    /** <p>The name of an organization</p> */
    public static final URI organization_name = createProperty("organization-name" );
    
    /** <p>The name of a unit within an organization</p> */
    public static final URI organization_unit = createProperty("organization-unit" );
    
    /** <p>An email address unaffiliated with any particular organization or employer; 
     *  a personal email address</p>
     */
    public static final URI personalEmail = createProperty("personalEmail" );
    
    /** <p>A photograph of a person</p> */
    public static final URI photo = createProperty("photo" );
    
    /** <p>The post office box of a postal address</p> */
    public static final URI post_office_box = createProperty("post-office-box" );
    
    /** <p>The postal code (e.g., U.S. ZIP code) of a postal address</p> */
    public static final URI postal_code = createProperty("postal-code" );
    
    /** <p>The region (e.g., state or province) of a postal address</p> */
    public static final URI region = createProperty("region" );
    
    /** <p>The timestamp of a revision of a vCard</p> */
    public static final URI rev = createProperty("rev" );
    
    /** <p>A role a person plays within an organization</p> */
    public static final URI role = createProperty("role" );
    
    /** <p>A version of a person's name suitable for collation</p> */
    public static final URI sort_string = createProperty("sort-string" );
    
    /** <p>A sound (e.g., a greeting or pronounciation) of a person</p> */
    public static final URI sound = createProperty("sound" );
    
    /** <p>The street address of a postal address</p> */
    public static final URI street_address = createProperty("street-address" );
    
    /** <p>A telephone number of a person</p> */
    public static final URI tel = createProperty("tel" );
    
    /** <p>A person's title</p> */
    public static final URI title = createProperty("title" );
    
    /** <p>A timezone associated with a person</p> */
    public static final URI tz = createProperty("tz" );
    
    /** <p>A UID of a person's vCard</p> */
    public static final URI uid = createProperty("uid" );
    
    /** <p>An (explicitly) unlabeled address of a person</p> */
    public static final URI unlabeledAdr = createProperty("unlabeledAdr" );
    
    /** <p>An (explicitly) unlabeled email address of a person</p> */
    public static final URI unlabeledEmail = createProperty("unlabeledEmail" );
    
    /** <p>An (explicitly) unlabeled phone number of a person</p> */
    public static final URI unlabeledTel = createProperty("unlabeledTel" );
    
    /** <p>A URL associated with a person</p> */
    public static final URI url = createProperty("url" );
    
    /** <p>A work address of a person</p> */
    public static final URI workAdr = createProperty("workAdr" );
    
    /** <p>A work email address of a person</p> */
    public static final URI workEmail = createProperty("workEmail" );
    
    /** <p>A work phone number of a person</p> */
    public static final URI workTel = createProperty("workTel" );
    
    /** <p>Resources that are vCard (postal) addresses</p> */
    public static final URI Address = factory.createURI( "http://www.w3.org/2006/vcard/ns#Address" );
    
    /* XXX TODO FIXME
     * added by GR: this is not existing in the spec but we should support it
     */
    public static final URI addressType = createProperty("addressType");
    /*
     * XXX TODO FIXME see above
     */
    /** <p>Resources that are vCard Telephones</p> */
    public static final URI Telephone = factory.createURI( "http://www.w3.org/2006/vcard/ns#Address" );
    
    
    /** <p>Resources that are vCard geographic locations</p> */
    /** GR: aka Geo **/
    public static final URI Location = factory.createURI( "http://www.w3.org/2006/vcard/ns#Location" );
    
    /** <p>Resources that are vCard personal names</p> */
    public static final URI Name = factory.createURI( "http://www.w3.org/2006/vcard/ns#Name" );
    
    /** <p>Resources that are vCard organizations</p> */
    public static final URI Organization = factory.createURI( "http://www.w3.org/2006/vcard/ns#Organization" );
    
    /** <p>Resources that are vCards</p> */
    public static final URI VCard = factory.createURI( "http://www.w3.org/2006/vcard/ns#VCard" );
    
    public static URI getProperty(String name) {
    	return propertyMap.get(name);
    }

    private static URI createProperty(String localName) {
		URI result = factory.createURI( "http://www.w3.org/2006/vcard/ns#"+localName);
		propertyMap.put(localName, result);
		return result;
	}

}
