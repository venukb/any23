package org.deri.any23.vocab;

import org.openrdf.model.URI;

/**
 * Vocabulary definitions from vocabularies/review.rdf
 *
 * @author Auto-generated by schemagen
 */
public class REVIEW extends Ontology {

    /**
     * The namespace of the vocabulary as a string.
     */
    public static final String NS = "http://purl.org/stuff/rev#";

    /**
     * The namespace of the vocabulary as a URI.
     */
    public static final URI NAMESPACE = createURI(NS);

    /**
     * The commenter on the review.
     */
    public static final URI commenter = createURI("commenter");

    /**
     * Used to associate a review with a comment on the review.
     */
    public static final URI hasComment = createURI("hasComment");

    /**
     * Associates a review with a feedback on the review.
     */
    public static final URI hasFeedback = createURI("hasFeedback");

    /**
     * Associates a work with a a review.
     */
    public static final URI hasReview = createURI("hasReview");

    /**
     * A numeric value.
     */
    public static final URI maxRating = createURI("maxRating");

    /**
     * A numeric value.
     */
    public static final URI minRating = createURI("minRating");

    /**
     * Number of positive usefulness votes (integer).
     */
    public static final URI positiveVotes = createURI("positiveVotes");

    /**
     * A numeric value.
     */
    public static final URI rating = createURI("rating");

    /**
     * The person that has written the review.
     */
    public static final URI reviewer = createURI("reviewer");

    /**
     * The text of the review.
     */
    public static final URI text = createURI("text");

    /**
     * The title of the review.
     */
    public static final URI title = createURI("title");

    /**
     * Number of usefulness votes (integer).
     */
    public static final URI totalVotes = createURI("totalVotes");

    /**
     * The type of media of a work under review.
     */
    public static final URI type = createURI("type");

    /**
     * A comment on a review.
     */
    public static final URI Comment = createURI("Comment");

    /**
     * Feedback on the review. Expresses whether the review was useful or not.
     */
    public static final URI Feedback = createURI("Feedback");

    /**
     * A review of an work.
     */
    public static final URI Review = createURI("Review");

    /**
     * The namespace of the vocabulary as a string.
     *
     * @see #NS
     */
    public static String getURI() {
        return NS;
    }

    private REVIEW(){}

}
