#summary Documentation for any23's web interface and web API

= Introduction =

Any23 includes a web interface that you can use to extract RDF from web documents. The web interface also includes a RESTful API for invoking any23.

= Running the server =

Run the `server` script from the command line in order to start up the server, then go to http://localhost:8080/ to access the web interface. You can also start the server from Java by running the `org.deri.any23.servlet.Any23Server` class. The Ant build can be used to create a WAR file for deployment into an existing servlet container such as Apache Tomcat; type `ant war` to generate the `any23.war` file.

= API documentation =

== Examples ==
  * http://localhost:8080/best/twitter.com/cygri
  * http://localhost:8080/rdfxml/http://data.gov
  * http://localhost:8080/ttl/http://www.w3.org/People/Berners-Lee/card
  * http://localhost:8080/?uri=http://dbpedia.org/resource/Berlin
  * http://localhost:8080/?format=nt&uri=http://dbpedia.org/resource/Berlin

== Compact API ==

HTTP GET requests can be made to URIs of the shape

{{{
http://localhost:8080/{format}/{input-uri}
}}}

The response is the input document converted to the desired output format.

== Form-style GET API ==

HTTP GET requests can be made to the URI `http://localhost:8080/` with the following query parameters:

||uri||URI of an input document||
||format||Desired output format; defaults to best||

The response is the input document converted to the desired output format.

== Direct POST API ==

HTTP POSTing a document body to `http://localhost:8080/{format}` will convert the document to the specified output format. The media type of the input has to be specified in the `Content-Type` HTTP header. Depending on the servlet container, a `Content-Length` header specifying the length of the input document in bytes might also be required. Typical media types for supported input formats are:

||Input format||Media type||
||HTML||text/html||
||RDF/XML||application/rdf+xml||
||Turtle||text/turtle||
||N-Triples||text/plain||

Example POST request:

{{{
POST /rdfxml HTTP/1.0
Host: localhost
Content-Type: text/turtle
Content-Length: 174

@prefix foaf: <http://xmlns.com/foaf/0.1/> .

[] a foaf:Person;
    foaf:name "John X. Foobar";
    foaf:mbox_sha1sum "cef817456278b70cee8e5a1611539ef9d928810e";
    .
}}}

== Form-style POST API ==

A document body can also be converted by HTTP POSTing form data to `http://localhost:8080/`. The `Content-Type` HTTP header must be set to `application/x-www-form-urlencoded`. The following parameters are supported:

||type||Media type of the input, see the table above. If not present, auto-detection will be attempted.||
||body||Document body to be converted||
||format||Desired output format; defaults to best||

== Output formats ==

Supported output format identifiers are:

  * `best` for content negotiation according to the client's `Accept` HTTP header
  * `turtle`, `ttl`, `n3` for Turtle/N3
  * `ntriples`, `nt` for N-Triples
  * `rdfxml`, `rdf`, `xml` for RDF/XML

== Error reporting ==

Processing errors are indicated via HTTP status codes and brief `text/plain` error messages. The following status codes can be returned:

||Code||Reason||
||200 OK||Success||
||204 No Content||Extraction from input was successful, but yielded zero triples||
||400 Bad Request||Missing or malformed input parameter||
||404 Not Found||Malformed request URI||
||406 Not Acceptable||None of the media types specified in the Accept header are supported||
||415 Unsupported Media Type||Document body with unsupported media type was POSTed||
||502 Bad Gateway||Input document from a remote server could not be fetched or parsed||